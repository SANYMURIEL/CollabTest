{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport appApi from \"../services/appApi\";\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: null,\n  reducers: {\n    addNotifications: (state, {\n      payload\n    }) => {\n      if (state.newMessages[payload]) {\n        state.newMessages[payload] = state.newMessages[payload] + 1;\n      } else {\n        state.newMessages[payload] = 1;\n      }\n    },\n    resetNotifications: (state, {\n      payload\n    }) => {\n      delete state.newMessages[payload];\n    }\n  },\n  extraReducers: builder => {\n    //save user after signup\n    builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, {\n      payload\n    }) => payload);\n    //save user after login\n    builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, {\n      payload\n    }) => payload);\n    //logout:destroy user session\n    builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\n  }\n});\nexport const {\n  addNotifications,\n  resetNotifications\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","appApi","userSlice","name","initialState","reducers","addNotifications","state","payload","newMessages","resetNotifications","extraReducers","builder","addMatcher","endpoints","signupUser","matchFulfilled","loginUser","logoutUser","actions","reducer"],"sources":["C:/Users/HP/Desktop/PROJET/frontend/src/features/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\nimport appApi from \"../services/appApi\"\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: null,\r\n  reducers: {\r\n    addNotifications: (state, { payload }) => {\r\n      if (state.newMessages[payload]) {\r\n        state.newMessages[payload] = state.newMessages[payload] + 1;\r\n      } else {\r\n        state.newMessages[payload] = 1;\r\n      }\r\n    },\r\n    resetNotifications: (state, { payload }) => {\r\n      delete state.newMessages[payload];\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    //save user after signup\r\n    builder.addMatcher(\r\n      appApi.endpoints.signupUser.matchFulfilled,\r\n      (state, { payload }) => payload\r\n    );\r\n    //save user after login\r\n    builder.addMatcher(\r\n      appApi.endpoints.loginUser.matchFulfilled,\r\n      (state, { payload }) => payload\r\n    );\r\n    //logout:destroy user session\r\n    builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\r\n  },\r\n});\r\n\r\nexport const {addNotifications,resetNotifications} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;IACRC,gBAAgB,EAAEA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACxC,IAAID,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,EAAE;QAC9BD,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,GAAGD,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,GAAG,CAAC;MAC7D,CAAC,MAAM;QACLD,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC,GAAG,CAAC;MAChC;IACF,CAAC;IACDE,kBAAkB,EAAEA,CAACH,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MAC1C,OAAOD,KAAK,CAACE,WAAW,CAACD,OAAO,CAAC;IACnC;EACF,CAAC;EACDG,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,UAAU,CAChBZ,MAAM,CAACa,SAAS,CAACC,UAAU,CAACC,cAAc,EAC1C,CAACT,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAKA,OAC1B,CAAC;IACD;IACAI,OAAO,CAACC,UAAU,CAChBZ,MAAM,CAACa,SAAS,CAACG,SAAS,CAACD,cAAc,EACzC,CAACT,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAKA,OAC1B,CAAC;IACD;IACAI,OAAO,CAACC,UAAU,CAACZ,MAAM,CAACa,SAAS,CAACI,UAAU,CAACF,cAAc,EAAE,MAAM,IAAI,CAAC;EAC5E;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAACV,gBAAgB;EAACI;AAAkB,CAAC,GAAGR,SAAS,CAACiB,OAAO;AACtE,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}